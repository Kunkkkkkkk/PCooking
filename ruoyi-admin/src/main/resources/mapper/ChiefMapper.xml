<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.web.mapper.ChiefMapper">
    <select id="getChiefList" resultType="com.ruoyi.pda.domain.VO.ChiefVO">
        <!-- 获取厨师列表，包含电话、角色名称、角色代码以及评分平均值 --> SELECT mu.phonenumber AS
        phone,mc.real_name as name,mc.chief_id as id,sd.dict_label AS role_name,mc.status as
        status,mc.role AS role, COALESCE(AVG(mcm.rating), 0) AS rating,mc.join_time as joinTime FROM
        master_chief mc LEFT JOIN sys_user mu ON mc.user_id = mu.user_id LEFT JOIN sys_dict_data sd
        ON mc.role = sd.dict_code LEFT JOIN master_order mo ON mo.chief_id = mc.chief_id LEFT JOIN
        master_comment mcm ON mo.comment_id = mcm.comment_id <where>
            <if test="name != null and name != ''"> AND mc.real_name LIKE CONCAT('%', #{name}, '%') </if>
        <if
                test="status != null and status != ''"> AND mc.status = #{status} </if>
        </where>
        GROUP BY mu.phonenumber, sd.dict_label,
        mc.role,mc.real_name,mc.status,mc.join_time,mc.chief_id</select>
    <!-- 查询总数和总营业额 -->
    <select id="getPerformanceSummary" resultType="com.ruoyi.pda.domain.VO.ChiefVO"> SELECT COUNT(1)
        as orderNum, COALESCE(SUM(mo.price), 0) as totalRevenue, ( SELECT COUNT(1) FROM master_order
        mo2 WHERE mo2.chief_id = #{chiefId} AND mo2.status = '2' AND mo2.create_time >=
        DATE_SUB(CURDATE(), INTERVAL 30 DAY) ) as ordersLast30Days, ( SELECT
        COALESCE(SUM(mo3.price), 0) FROM master_order mo3 WHERE mo3.chief_id = #{chiefId} AND
        mo3.status = '2' AND mo3.create_time >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) ) as
        revenueLast30Days FROM master_order mo LEFT JOIN master_comment mcm ON mo.comment_id =
        mcm.comment_id WHERE mo.chief_id = #{chiefId} AND mo.status = '2' </select>

    <!-- 查询近30天订单历史 -->
    <select id="getOrderHistory" resultType="com.ruoyi.pda.domain.VO.OrderHistory"> SELECT
        DATE(mo.create_time) AS date, COUNT(1) AS orderCount FROM master_order mo WHERE mo.chief_id
        = #{chiefId} AND mo.status = '2' AND mo.create_time >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
        GROUP BY DATE(mo.create_time) ORDER BY date ASC </select>
    <select id="getChiefAuthList" resultType="com.ruoyi.pda.domain.VO.ChiefAuthVO"> select
        mca.auth_id as authId,mca.real_name as realName,mca.id_code as idCode,mca.request_time as
        requestTime,mca.identify_image as image,mca.status as status,mca.user_id as userId,mca.years
        as years,mca.cuisine as cuisine,mca.remark as remark,mca.reply as reply,su.phonenumber as
        phone,su.sex as sex from master_chief_auth mca left join sys_user su on mca.user_id =
        su.user_id <where>
            <if test="name !=null and name != ''"> and real_name like CONCAT('%', #{name}, '%') </if>
        <if
                test="status != null and status != ''"> and mca.status = #{status} </if>
        </where>
        order by mca.request_time DESC </select>

    <!-- 新增厨师认证申请 -->
    <insert id="insertChiefAuth" parameterType="com.ruoyi.pda.domain.ChiefAuth"> insert into
        master_chief_auth(user_id, real_name, id_code, link_phone, years, cuisine, identify_image,
        remark, status, request_time) values(#{userId}, #{realName}, #{idCode}, #{linkPhone},
        #{years}, #{cuisine}, #{image}, #{remark}, #{status}, #{requestTime}) </insert>

    <!-- 根据用户ID查询最新的厨师认证申请 -->
    <select id="getChiefAuthByUserId" resultType="com.ruoyi.pda.domain.VO.ChiefAuthVO"> select
        mca.auth_id as authId, mca.real_name as realName, mca.id_code as idCode, mca.request_time as
        requestTime, mca.identify_image as image, mca.status as status, mca.user_id as userId,
        mca.years as years, mca.cuisine as cuisine, mca.remark as remark, mca.reply as reply,
        mca.link_phone as phone, su.sex as sex from master_chief_auth mca left join sys_user su on
        mca.user_id = su.user_id where mca.user_id = #{userId} order by mca.request_time DESC limit
        1 </select>

    <!-- 根据用户ID查询厨师信息 -->
    <select id="findChiefByUserId" resultType="com.ruoyi.pda.domain.VO.ChiefVO"> SELECT chief_id as
        id, user_id as userId, real_name as name, status, role FROM master_chief WHERE user_id =
        #{userId} AND status = '0' -- 假设 '0' 代表状态正常/已启用 LIMIT 1 </select>

    <!-- 审核通过厨师认证申请 -->
    <update id="approveChiefAuth"> UPDATE master_chief_auth SET status = '1' WHERE user_id =
        #{userId} </update>

    <!-- 拒绝厨师认证申请 -->
    <update id="rejectChiefAuth"> UPDATE master_chief_auth SET status = '2', reply = #{reason} WHERE
        user_id = #{userId} </update>
    <update id="cancle">
        UPDATE master_order set status='0',chief_id=null where order_id =#{orderId}
    </update>

    <!-- 插入厨师信息 -->
    <insert id="insertChief"> INSERT INTO master_chief (user_id, real_name, status, role, join_time)
        VALUES (#{userId}, #{realName}, '0', '107', NOW()) </insert>

    <!-- 获取预约时间里可用的厨师信息 -->
    <select id="getChefs" resultType="com.ruoyi.pda.domain.VO.ChiefVO"> SELECT mc.chief_id AS id,
        mc.real_name AS name, su.avatar as avatar, (SELECT COALESCE(AVG(mcm2.rating), 0) FROM
        master_order mo2 LEFT JOIN master_comment mcm2 ON mo2.comment_id = mcm2.comment_id WHERE
        mo2.chief_id = mc.chief_id) AS rating, COUNT(mo.order_id) AS orderCount FROM master_chief mc
        LEFT JOIN sys_user su ON mc.user_id = su.user_id LEFT JOIN master_order mo ON mo.chief_id =
        mc.chief_id AND mo.status IN ('-1', '1') <!-- 待支付或待取餐 --> AND mo.order_time BETWEEN
        DATE_SUB(#{appointmentTime}, INTERVAL 30 MINUTE) AND DATE_ADD(#{appointmentTime}, INTERVAL
        30 MINUTE) WHERE mc.status = '0' <!-- 状态正常的厨师 --> GROUP BY mc.chief_id, mc.real_name, su.avatar HAVING
        COUNT(mo.order_id) &lt; 10 ORDER BY COUNT(mo.order_id), rating DESC </select>

    <!-- getNewOrders -->
    <select id="getNewOrders" resultType="com.ruoyi.pda.domain.VO.OrderVO"> SELECT mo.order_id as
        orderId, mo.chief_id as chiefId, mo.user_id as userId, mo.price, mo.status, mo.create_time
        as createTime, mo.order_time as orderTime, su.user_name as userName, mo.comment_id as
        commentId, mo.remark as remark, moi.dish_id as dishId, moi.dish_name as dishName,
        moi.quantity, moi.price as itemPrice, moi.dish_image_url as dishImageUrl FROM master_order
        mo LEFT JOIN master_order_item moi ON mo.order_id = moi.order_id LEFT JOIN sys_user su ON
        mo.user_id = su.user_id WHERE mo.status = -1 ORDER BY mo.create_time DESC </select>

    <!-- getMyPendingOrders -->
    <select id="getMyPendingOrders" resultType="com.ruoyi.pda.domain.VO.OrderVO"> SELECT mo.order_id
        as orderId, mo.chief_id as chiefId, mo.user_id as userId, mo.price, mo.status,
        mo.create_time as createTime, mo.order_time as orderTime, su.user_name as userName,
        mo.comment_id as commentId, mo.remark as remark, moi.dish_id as dishId, moi.dish_name as
        dishName, moi.quantity, moi.price as itemPrice, moi.dish_image_url as dishImageUrl FROM
        master_order mo LEFT JOIN master_order_item moi ON mo.order_id = moi.order_id LEFT JOIN
        sys_user su ON mo.user_id = su.user_id WHERE mo.chief_id = (SELECT chief_id FROM
        master_chief WHERE user_id = #{userId}) AND mo.status = #{status} ORDER BY mo.create_time
        DESC </select>
</mapper>