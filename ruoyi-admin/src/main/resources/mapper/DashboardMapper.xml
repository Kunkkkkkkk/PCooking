<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.web.mapper.DashboardMapper">

    <!-- 获取订单统计数据 -->
    <select id="getOrderStats" resultType="java.util.Map"> SELECT COUNT(CASE WHEN status != '-2'
        THEN 1 END) as allTimeOrders, COUNT(CASE WHEN DATE(create_time) = CURDATE() AND status !=
        '-2' THEN 1 END) as todayOrders, COUNT(CASE WHEN status = '2' AND create_time BETWEEN CASE
        WHEN #{timeRange} = 'today' THEN DATE_FORMAT(CURDATE(), '%Y-%m-%d 00:00:00') WHEN
        #{timeRange} = 'week' THEN DATE_SUB(CURDATE(), INTERVAL 7 DAY) WHEN #{timeRange} = 'month'
        THEN DATE_SUB(CURDATE(), INTERVAL 30 DAY) WHEN #{timeRange} = 'last7days' THEN
        DATE_SUB(CURDATE(), INTERVAL 7 DAY) WHEN #{timeRange} = 'last30days' THEN
        DATE_SUB(CURDATE(), INTERVAL 30 DAY) ELSE #{startDate} END AND CASE WHEN #{timeRange} =
        'today' THEN DATE_FORMAT(CURDATE(), '%Y-%m-%d 23:59:59') WHEN #{timeRange} IN ('week',
        'month', 'last7days', 'last30days') THEN NOW() ELSE #{endDate} END THEN 1 END) as
        completedOrders, COALESCE(SUM(CASE WHEN status != '-2' THEN price ELSE 0 END), 0) as
        allTimeRevenue, COALESCE(SUM(CASE WHEN DATE(create_time) = CURDATE() AND status != '-2' THEN
        price ELSE 0 END), 0) as todayRevenue, COUNT(CASE WHEN status != '-2' AND create_time
        BETWEEN CASE WHEN #{timeRange} = 'today' THEN DATE_FORMAT(CURDATE(), '%Y-%m-%d 00:00:00')
        WHEN #{timeRange} = 'week' THEN DATE_SUB(CURDATE(), INTERVAL 7 DAY) WHEN #{timeRange} =
        'month' THEN DATE_SUB(CURDATE(), INTERVAL 30 DAY) WHEN #{timeRange} = 'last7days' THEN
        DATE_SUB(CURDATE(), INTERVAL 7 DAY) WHEN #{timeRange} = 'last30days' THEN
        DATE_SUB(CURDATE(), INTERVAL 30 DAY) ELSE #{startDate} END AND CASE WHEN #{timeRange} =
        'today' THEN DATE_FORMAT(CURDATE(), '%Y-%m-%d 23:59:59') WHEN #{timeRange} IN ('week',
        'month', 'last7days', 'last30days') THEN NOW() ELSE #{endDate} END THEN 1 END) as
        filteredOrders, COALESCE(SUM(CASE WHEN status != '-2' AND create_time BETWEEN CASE WHEN
        #{timeRange} = 'today' THEN DATE_FORMAT(CURDATE(), '%Y-%m-%d 00:00:00') WHEN #{timeRange} =
        'week' THEN DATE_SUB(CURDATE(), INTERVAL 7 DAY) WHEN #{timeRange} = 'month' THEN
        DATE_SUB(CURDATE(), INTERVAL 30 DAY) WHEN #{timeRange} = 'last7days' THEN
        DATE_SUB(CURDATE(), INTERVAL 7 DAY) WHEN #{timeRange} = 'last30days' THEN
        DATE_SUB(CURDATE(), INTERVAL 30 DAY) ELSE #{startDate} END AND CASE WHEN #{timeRange} =
        'today' THEN DATE_FORMAT(CURDATE(), '%Y-%m-%d 23:59:59') WHEN #{timeRange} IN ('week',
        'month', 'last7days', 'last30days') THEN NOW() ELSE #{endDate} END THEN price ELSE 0 END),
        0) as filteredRevenue, COUNT(CASE WHEN status != '-2' AND create_time BETWEEN CASE WHEN
        #{timeRange} = 'today' THEN DATE_FORMAT(CURDATE(), '%Y-%m-%d 00:00:00') WHEN #{timeRange} =
        'week' THEN DATE_SUB(CURDATE(), INTERVAL 7 DAY) WHEN #{timeRange} = 'month' THEN
        DATE_SUB(CURDATE(), INTERVAL 30 DAY) WHEN #{timeRange} = 'last7days' THEN
        DATE_SUB(CURDATE(), INTERVAL 7 DAY) WHEN #{timeRange} = 'last30days' THEN
        DATE_SUB(CURDATE(), INTERVAL 30 DAY) ELSE #{startDate} END AND CASE WHEN #{timeRange} =
        'today' THEN DATE_FORMAT(CURDATE(), '%Y-%m-%d 23:59:59') WHEN #{timeRange} IN ('week',
        'month', 'last7days', 'last30days') THEN NOW() ELSE #{endDate} END THEN 1 END) as
        currentOrders, COUNT(CASE WHEN status != '-2' AND create_time BETWEEN CASE WHEN #{timeRange}
        = 'today' THEN DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), '%Y-%m-%d 00:00:00') WHEN
        #{timeRange} = 'week' THEN DATE_SUB(CURDATE(), INTERVAL 14 DAY) WHEN #{timeRange} = 'month'
        THEN DATE_SUB(CURDATE(), INTERVAL 60 DAY) WHEN #{timeRange} = 'last7days' THEN
        DATE_SUB(CURDATE(), INTERVAL 14 DAY) WHEN #{timeRange} = 'last30days' THEN
        DATE_SUB(CURDATE(), INTERVAL 60 DAY) ELSE DATE_SUB(#{startDate}, INTERVAL 30 DAY) END AND
        CASE WHEN #{timeRange} = 'today' THEN DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),
        '%Y-%m-%d 23:59:59') WHEN #{timeRange} = 'week' THEN DATE_SUB(CURDATE(), INTERVAL 7 DAY)
        WHEN #{timeRange} = 'month' THEN DATE_SUB(CURDATE(), INTERVAL 30 DAY) WHEN #{timeRange} =
        'last7days' THEN DATE_SUB(CURDATE(), INTERVAL 7 DAY) WHEN #{timeRange} = 'last30days' THEN
        DATE_SUB(CURDATE(), INTERVAL 30 DAY) ELSE DATE_SUB(#{endDate}, INTERVAL 30 DAY) END THEN 1
        END) as previousOrders, COALESCE(SUM(CASE WHEN status != '-2' AND create_time BETWEEN CASE
        WHEN #{timeRange} = 'today' THEN DATE_FORMAT(CURDATE(), '%Y-%m-%d 00:00:00') WHEN
        #{timeRange} = 'week' THEN DATE_SUB(CURDATE(), INTERVAL 7 DAY) WHEN #{timeRange} = 'month'
        THEN DATE_SUB(CURDATE(), INTERVAL 30 DAY) WHEN #{timeRange} = 'last7days' THEN
        DATE_SUB(CURDATE(), INTERVAL 7 DAY) WHEN #{timeRange} = 'last30days' THEN
        DATE_SUB(CURDATE(), INTERVAL 30 DAY) ELSE #{startDate} END AND CASE WHEN #{timeRange} =
        'today' THEN DATE_FORMAT(CURDATE(), '%Y-%m-%d 23:59:59') WHEN #{timeRange} IN ('week',
        'month', 'last7days', 'last30days') THEN NOW() ELSE #{endDate} END THEN price ELSE 0 END),
        0) as currentRevenue, COALESCE(SUM(CASE WHEN status != '-2' AND create_time BETWEEN CASE
        WHEN #{timeRange} = 'today' THEN DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), '%Y-%m-%d
        00:00:00') WHEN #{timeRange} = 'week' THEN DATE_SUB(CURDATE(), INTERVAL 14 DAY) WHEN
        #{timeRange} = 'month' THEN DATE_SUB(CURDATE(), INTERVAL 60 DAY) WHEN #{timeRange} =
        'last7days' THEN DATE_SUB(CURDATE(), INTERVAL 14 DAY) WHEN #{timeRange} = 'last30days' THEN
        DATE_SUB(CURDATE(), INTERVAL 60 DAY) ELSE DATE_SUB(#{startDate}, INTERVAL 30 DAY) END AND
        CASE WHEN #{timeRange} = 'today' THEN DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),
        '%Y-%m-%d 23:59:59') WHEN #{timeRange} = 'week' THEN DATE_SUB(CURDATE(), INTERVAL 7 DAY)
        WHEN #{timeRange} = 'month' THEN DATE_SUB(CURDATE(), INTERVAL 30 DAY) WHEN #{timeRange} =
        'last7days' THEN DATE_SUB(CURDATE(), INTERVAL 7 DAY) WHEN #{timeRange} = 'last30days' THEN
        DATE_SUB(CURDATE(), INTERVAL 30 DAY) ELSE DATE_SUB(#{endDate}, INTERVAL 30 DAY) END THEN
        price ELSE 0 END), 0) as previousRevenue FROM master_order </select>

    <!-- 获取用户统计数据 -->
    <select id="getUserStats" resultType="java.util.Map"> SELECT COUNT(*) as totalUsers, COUNT(CASE
        WHEN DATE(create_time) = CURDATE() THEN 1 END) as newUsers, (SELECT COUNT(DISTINCT
        user_name) FROM sys_logininfor WHERE login_time >= DATE_SUB(NOW(), INTERVAL 7 DAY) AND
        status = '0') as activeUsers, COUNT(CASE WHEN create_time BETWEEN CASE WHEN #{timeRange} =
        'today' THEN DATE_FORMAT(CURDATE(), '%Y-%m-%d 00:00:00') WHEN #{timeRange} = 'week' THEN
        DATE_SUB(CURDATE(), INTERVAL 7 DAY) WHEN #{timeRange} = 'month' THEN DATE_SUB(CURDATE(),
        INTERVAL 30 DAY) WHEN #{timeRange} = 'last7days' THEN DATE_SUB(CURDATE(), INTERVAL 7 DAY)
        WHEN #{timeRange} = 'last30days' THEN DATE_SUB(CURDATE(), INTERVAL 30 DAY) ELSE #{startDate}
        END AND CASE WHEN #{timeRange} = 'today' THEN DATE_FORMAT(CURDATE(), '%Y-%m-%d 23:59:59')
        WHEN #{timeRange} IN ('week', 'month', 'last7days', 'last30days') THEN NOW() ELSE #{endDate}
        END THEN 1 END) as currentUsers, COUNT(CASE WHEN create_time BETWEEN CASE WHEN #{timeRange}
        = 'today' THEN DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), '%Y-%m-%d 00:00:00') WHEN
        #{timeRange} = 'week' THEN DATE_SUB(CURDATE(), INTERVAL 14 DAY) WHEN #{timeRange} = 'month'
        THEN DATE_SUB(CURDATE(), INTERVAL 60 DAY) WHEN #{timeRange} = 'last7days' THEN
        DATE_SUB(CURDATE(), INTERVAL 14 DAY) WHEN #{timeRange} = 'last30days' THEN
        DATE_SUB(CURDATE(), INTERVAL 60 DAY) ELSE DATE_SUB(#{startDate}, INTERVAL 30 DAY) END AND
        CASE WHEN #{timeRange} = 'today' THEN DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY),
        '%Y-%m-%d 23:59:59') WHEN #{timeRange} = 'week' THEN DATE_SUB(CURDATE(), INTERVAL 7 DAY)
        WHEN #{timeRange} = 'month' THEN DATE_SUB(CURDATE(), INTERVAL 30 DAY) WHEN #{timeRange} =
        'last7days' THEN DATE_SUB(CURDATE(), INTERVAL 7 DAY) WHEN #{timeRange} = 'last30days' THEN
        DATE_SUB(CURDATE(), INTERVAL 30 DAY) ELSE DATE_SUB(#{endDate}, INTERVAL 30 DAY) END THEN 1
        END) as previousUsers FROM sys_user WHERE del_flag = '0' </select>

    <!-- 获取厨师统计数据 -->
    <select id="getChefStats" resultType="java.util.Map"> SELECT (SELECT COUNT(*) FROM master_chief
        WHERE status = '0') as totalChefs, (SELECT COUNT(*) FROM master_chief_auth WHERE status =
        '0') as pendingApplications, (SELECT COUNT(*) FROM master_chief WHERE status = '0' AND
        is_recommend = '2') as goldChefs, (SELECT COUNT(*) FROM master_chief WHERE status = '0' AND
        is_recommend = '1') as silverChefs </select>

    <!-- 获取订单趋势数据 -->
    <select id="getOrderTrend" resultType="java.util.Map"> SELECT DATE(create_time) as date,
        COUNT(*) as count, COALESCE(SUM(price), 0) as revenue FROM master_order WHERE status != '-2' <if
            test="timeRange != null and timeRange == 'today'"> AND DATE(create_time) = CURDATE() </if>
        <if
            test="timeRange != null and timeRange == 'week'"> AND create_time >= DATE_SUB(CURDATE(),
        INTERVAL 7 DAY) </if>
        <if test="timeRange != null and timeRange == 'month'"> AND create_time
        >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) </if>
        <if
            test="timeRange != null and timeRange == 'last7days'"> AND create_time >=
        DATE_SUB(CURDATE(), INTERVAL 7 DAY) </if>
        <if
            test="timeRange != null and timeRange == 'last30days'"> AND create_time >=
        DATE_SUB(CURDATE(), INTERVAL 30 DAY) </if>
        <if test="startDate != null and endDate != null">
        AND create_time BETWEEN #{startDate} AND #{endDate} </if> GROUP BY DATE(create_time) ORDER
        BY date </select>

    <!-- 获取订单状态分布 -->
    <select id="getOrderStatusDistribution" resultType="java.util.Map"> SELECT status, COUNT(*) as
        count FROM master_order WHERE 1=1 <if test="timeRange != null and timeRange == 'today'"> AND
        DATE(create_time) = CURDATE() </if>
        <if test="timeRange != null and timeRange == 'week'"> AND
        create_time >= DATE_SUB(CURDATE(), INTERVAL 7 DAY) </if>
        <if
            test="timeRange != null and timeRange == 'month'"> AND create_time >=
        DATE_SUB(CURDATE(), INTERVAL 30 DAY) </if>
        <if
            test="timeRange != null and timeRange == 'last7days'"> AND create_time >=
        DATE_SUB(CURDATE(), INTERVAL 7 DAY) </if>
        <if
            test="timeRange != null and timeRange == 'last30days'"> AND create_time >=
        DATE_SUB(CURDATE(), INTERVAL 30 DAY) </if>
        <if test="startDate != null and endDate != null">
        AND create_time BETWEEN #{startDate} AND #{endDate} </if> GROUP BY status </select>

    <!-- 获取热门菜品排行 -->
    <select id="getPopularDishes" resultType="java.util.Map"> SELECT d.name, COUNT(oi.dish_id) as
        orderCount, SUM(oi.quantity) as totalQuantity, COALESCE(SUM(oi.price * oi.quantity), 0) as
        totalRevenue FROM master_order_item oi JOIN master_dishes d ON oi.dish_id = d.dish_id JOIN
        master_order o ON oi.order_id = o.order_id WHERE o.status != '-2' <if
            test="timeRange != null and timeRange == 'today'"> AND DATE(o.create_time) = CURDATE() </if>
        <if
            test="timeRange != null and timeRange == 'week'"> AND o.create_time >=
        DATE_SUB(CURDATE(), INTERVAL 7 DAY) </if>
        <if
            test="timeRange != null and timeRange == 'month'"> AND o.create_time >=
        DATE_SUB(CURDATE(), INTERVAL 30 DAY) </if>
        <if
            test="timeRange != null and timeRange == 'last7days'"> AND o.create_time >=
        DATE_SUB(CURDATE(), INTERVAL 7 DAY) </if>
        <if
            test="timeRange != null and timeRange == 'last30days'"> AND o.create_time >=
        DATE_SUB(CURDATE(), INTERVAL 30 DAY) </if>
        <if test="startDate != null and endDate != null">
        AND o.create_time BETWEEN #{startDate} AND #{endDate} </if> GROUP BY d.dish_id, d.name ORDER
        BY orderCount DESC LIMIT 10 </select>

    <!-- 获取厨师工作负载 -->
    <select id="getChefWorkload" resultType="java.util.Map"> SELECT mc.real_name as name,
        COUNT(mo.order_id) as orderCount, COALESCE(SUM(mo.price), 0) as totalRevenue FROM
        master_chief mc INNER JOIN master_order mo ON mc.chief_id = mo.chief_id WHERE mc.status =
        '0' AND mo.status = '-3' <if test="timeRange != null and timeRange == 'today'"> AND
        DATE(mo.create_time) = CURDATE() </if>
        <if test="timeRange != null and timeRange == 'week'">
        AND mo.create_time >= DATE_SUB(CURDATE(), INTERVAL 7 DAY) </if>
        <if
            test="timeRange != null and timeRange == 'month'"> AND mo.create_time >=
        DATE_SUB(CURDATE(), INTERVAL 30 DAY) </if>
        <if
            test="timeRange != null and timeRange == 'last7days'"> AND mo.create_time >=
        DATE_SUB(CURDATE(), INTERVAL 7 DAY) </if>
        <if
            test="timeRange != null and timeRange == 'last30days'"> AND mo.create_time >=
        DATE_SUB(CURDATE(), INTERVAL 30 DAY) </if>
        <if test="startDate != null and endDate != null">
        AND mo.create_time BETWEEN #{startDate} AND #{endDate} </if> GROUP BY mc.chief_id,
        mc.real_name ORDER BY orderCount DESC </select>

    <!-- 获取用户增长趋势 -->
    <select id="getUserGrowth" resultType="java.util.Map"> SELECT DATE(create_time) as date,
        COUNT(*) as newUsers FROM sys_user WHERE del_flag = '0' <if
            test="timeRange != null and timeRange == 'today'"> AND DATE(create_time) = CURDATE() </if>
        <if
            test="timeRange != null and timeRange == 'week'"> AND create_time >= DATE_SUB(CURDATE(),
        INTERVAL 7 DAY) </if>
        <if test="timeRange != null and timeRange == 'month'"> AND create_time
        >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) </if>
        <if
            test="timeRange != null and timeRange == 'last7days'"> AND create_time >=
        DATE_SUB(CURDATE(), INTERVAL 7 DAY) </if>
        <if
            test="timeRange != null and timeRange == 'last30days'"> AND create_time >=
        DATE_SUB(CURDATE(), INTERVAL 30 DAY) </if>
        <if test="startDate != null and endDate != null">
        AND create_time BETWEEN #{startDate} AND #{endDate} </if> GROUP BY DATE(create_time) ORDER
        BY date </select>

    <!-- 获取营收分析 -->
    <select id="getRevenueAnalysis" resultType="java.util.Map"> SELECT DATE(create_time) as date,
        COALESCE(SUM(CASE WHEN status = '2' THEN price ELSE 0 END), 0) as completedRevenue,
        COALESCE(SUM(CASE WHEN status NOT IN ('-2', '2') THEN price ELSE 0 END), 0) as
        pendingRevenue, COUNT(CASE WHEN status = '2' THEN 1 END) as completedOrders, COUNT(CASE WHEN
        status NOT IN ('-2', '2') THEN 1 END) as pendingOrders FROM master_order WHERE status !=
        '-2' <if test="timeRange != null and timeRange == 'today'"> AND DATE(create_time) =
        CURDATE() </if>
        <if test="timeRange != null and timeRange == 'week'"> AND create_time >=
        DATE_SUB(CURDATE(), INTERVAL 7 DAY) </if>
        <if
            test="timeRange != null and timeRange == 'month'"> AND create_time >=
        DATE_SUB(CURDATE(), INTERVAL 30 DAY) </if>
        <if
            test="timeRange != null and timeRange == 'last7days'"> AND create_time >=
        DATE_SUB(CURDATE(), INTERVAL 7 DAY) </if>
        <if
            test="timeRange != null and timeRange == 'last30days'"> AND create_time >=
        DATE_SUB(CURDATE(), INTERVAL 30 DAY) </if>
        <if test="startDate != null and endDate != null">
        AND create_time BETWEEN #{startDate} AND #{endDate} </if> GROUP BY DATE(create_time) ORDER
        BY date </select>

    <!-- 获取厨师申请统计 -->
    <select id="getChefApplicationStats" resultType="java.util.Map"> SELECT CASE status WHEN '0'
        THEN '待审核' WHEN '1' THEN '已通过' WHEN '2' THEN '已拒绝' ELSE '未知状态' END as name, COUNT(*) as
        value FROM master_chief_auth WHERE 1=1 <if test="timeRange != null and timeRange == 'today'">
        AND DATE(request_time) = CURDATE() </if>
        <if test="timeRange != null and timeRange == 'week'">
        AND YEARWEEK(request_time, 1) = YEARWEEK(CURDATE(), 1) </if>
        <if
            test="timeRange != null and timeRange == 'month'"> AND YEAR(request_time) =
        YEAR(CURDATE()) AND MONTH(request_time) = MONTH(CURDATE()) </if>
        <if
            test="timeRange != null and timeRange == 'last7days'"> AND request_time >=
        DATE_SUB(CURDATE(), INTERVAL 7 DAY) </if>
        <if
            test="timeRange != null and timeRange == 'last30days'"> AND request_time >=
        DATE_SUB(CURDATE(), INTERVAL 30 DAY) </if>
        <if test="startDate != null and endDate != null">
        AND request_time BETWEEN #{startDate} AND #{endDate} </if> GROUP BY status </select>

    <!-- 获取订单高峰时段分析 -->
    <select id="getPeakHoursAnalysis" resultType="java.util.Map"> SELECT HOUR(order_time) as hour,
        COUNT(*) as orderCount FROM master_order WHERE status != '-2' AND order_time IS NOT NULL <if
            test="timeRange != null and timeRange == 'today'"> AND DATE(order_time) = CURDATE() </if>
        <if
            test="timeRange != null and timeRange == 'week'"> AND order_time >= DATE_SUB(CURDATE(),
        INTERVAL 7 DAY) </if>
        <if test="timeRange != null and timeRange == 'month'"> AND order_time
        >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) </if>
        <if
            test="timeRange != null and timeRange == 'last7days'"> AND order_time >=
        DATE_SUB(CURDATE(), INTERVAL 7 DAY) </if>
        <if
            test="timeRange != null and timeRange == 'last30days'"> AND order_time >=
        DATE_SUB(CURDATE(), INTERVAL 30 DAY) </if>
        <if test="startDate != null and endDate != null">
        AND order_time BETWEEN #{startDate} AND #{endDate} </if> GROUP BY HOUR(order_time) ORDER BY
        hour </select>

    <!-- 获取菜品类别分析 -->
    <select id="getDishCategoryAnalysis" resultType="map"> SELECT d.type_dict_code as categoryCode,
        COUNT(oi.dish_id) as orderCount, SUM(oi.quantity) as totalQuantity, COALESCE(SUM(oi.price *
        oi.quantity), 0) as totalRevenue FROM master_order_item oi JOIN master_dishes d ON
        oi.dish_id = d.dish_id JOIN master_order o ON oi.order_id = o.order_id WHERE o.status !=
        '-2' <if test="timeRange == 'today'"> AND DATE(o.create_time) = CURDATE() </if>
        <if
            test="timeRange == 'week'"> AND YEARWEEK(o.create_time, 1) = YEARWEEK(CURDATE(), 1) </if>
        <if
            test="timeRange == 'month'"> AND YEAR(o.create_time) = YEAR(CURDATE()) AND
        MONTH(o.create_time) = MONTH(CURDATE()) </if>
        <if test="timeRange == 'last7days'"> AND
        o.create_time >= DATE_SUB(CURDATE(), INTERVAL 7 DAY) </if>
        <if
            test="timeRange == 'last30days'"> AND o.create_time >= DATE_SUB(CURDATE(), INTERVAL 30
        DAY) </if>
        <if test="timeRange == 'custom' and startDate != null and endDate != null"> AND
        DATE(o.create_time) BETWEEN #{startDate} AND #{endDate} </if> GROUP BY d.type_dict_code
        ORDER BY orderCount DESC LIMIT 10 </select>

    <!-- 获取用户行为分析 -->
    <select id="getUserBehaviorAnalysis" resultType="java.util.Map"> SELECT DATE(o.create_time) as
        date, COUNT(DISTINCT o.user_id) as activeUsers, COUNT(o.order_id) as totalOrders,
        AVG(o.price) as avgOrderValue, COUNT(CASE WHEN o.status = '2' THEN 1 END) as completedOrders
        FROM master_order o WHERE o.status != '-2' <if
            test="timeRange != null and timeRange == 'today'"> AND DATE(o.create_time) = CURDATE() </if>
        <if
            test="timeRange != null and timeRange == 'week'"> AND o.create_time >=
        DATE_SUB(CURDATE(), INTERVAL 7 DAY) </if>
        <if
            test="timeRange != null and timeRange == 'month'"> AND o.create_time >=
        DATE_SUB(CURDATE(), INTERVAL 30 DAY) </if>
        <if
            test="timeRange != null and timeRange == 'last7days'"> AND o.create_time >=
        DATE_SUB(CURDATE(), INTERVAL 7 DAY) </if>
        <if
            test="timeRange != null and timeRange == 'last30days'"> AND o.create_time >=
        DATE_SUB(CURDATE(), INTERVAL 30 DAY) </if>
        <if test="startDate != null and endDate != null">
        AND o.create_time BETWEEN #{startDate} AND #{endDate} </if> GROUP BY DATE(o.create_time)
        ORDER BY date </select>

    <!-- 获取厨师绩效排行 -->
    <select id="getChefPerformance" resultType="java.util.Map"> SELECT mc.real_name as name,
        COUNT(mo.order_id) as orderCount, COALESCE(SUM(mo.price), 0) as totalRevenue,
        COALESCE(AVG(mo.price), 0) as avgOrderValue, ROUND((COUNT(CASE WHEN mo.status = '2' THEN 1
        END) * 100.0 / NULLIF(COUNT(CASE WHEN mo.status != '-2' THEN 1 END), 0)), 2) as
        completionRate, ROUND((COUNT(mo.order_id) * 0.3 + COALESCE(SUM(mo.price), 0) / 1000 * 0.4 +
        COALESCE(AVG(mo.price), 0) / 100 * 0.3), 2) as score FROM master_chief mc INNER JOIN
        master_order mo ON mc.chief_id = mo.chief_id WHERE mc.status = '0' AND mo.status != '-2' <if
            test="timeRange != null and timeRange == 'today'"> AND DATE(mo.create_time) = CURDATE() </if>
        <if
            test="timeRange != null and timeRange == 'week'"> AND mo.create_time >=
        DATE_SUB(CURDATE(), INTERVAL 7 DAY) </if>
        <if
            test="timeRange != null and timeRange == 'month'"> AND mo.create_time >=
        DATE_SUB(CURDATE(), INTERVAL 30 DAY) </if>
        <if
            test="timeRange != null and timeRange == 'last7days'"> AND mo.create_time >=
        DATE_SUB(CURDATE(), INTERVAL 7 DAY) </if>
        <if
            test="timeRange != null and timeRange == 'last30days'"> AND mo.create_time >=
        DATE_SUB(CURDATE(), INTERVAL 30 DAY) </if>
        <if test="startDate != null and endDate != null">
        AND mo.create_time BETWEEN #{startDate} AND #{endDate} </if> GROUP BY mc.chief_id,
        mc.real_name HAVING COUNT(mo.order_id) > 0 ORDER BY score DESC LIMIT 20 </select>

</mapper> 