<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.pda.mapper.SocialCommentMapper">
    <resultMap type="com.ruoyi.pda.domain.SocialComment" id="SocialCommentResult">
        <id property="commentId" column="comment_id" />
        <result property="socialId" column="social_id" />
        <result property="userId" column="user_id" />
        <result property="content" column="content" />
        <result property="parentId" column="parent_id" />
        <result property="status" column="status" />
        <result property="createTime" column="create_time" />
        <association property="user" javaType="com.ruoyi.common.core.domain.entity.SysUser">
            <id property="userId" column="user_id" />
            <result property="nickName" column="nick_name" />
            <result property="avatar" column="avatar" />
        </association>
    </resultMap>

    <sql id="selectSocialCommentVo"> select c.comment_id, c.social_id, c.user_id, c.content,
        c.parent_id, c.status, c.create_time, u.nick_name, u.avatar from master_social_comment c
        left join sys_user u on c.user_id = u.user_id </sql>

    <select id="selectSocialCommentList" parameterType="com.ruoyi.pda.domain.SocialComment"
        resultMap="SocialCommentResult">
        <include refid="selectSocialCommentVo" />
        <where> c.status = '0' <if test="socialId != null">
        AND c.social_id = #{socialId} </if>
            <if test="userId != null"> AND c.user_id = #{userId} </if>

        </where>
        order by c.create_time desc </select>

    <select id="selectSocialCommentBySocialId" parameterType="Long" resultMap="SocialCommentResult">
        <include refid="selectSocialCommentVo" /> where c.social_id = #{socialId} and c.status = '0'
        and c.parent_id is null order by c.create_time desc </select>

    <select id="selectSocialCommentReplies" parameterType="Long" resultMap="SocialCommentResult">
        <include refid="selectSocialCommentVo" /> where c.parent_id = #{parentId} and c.status = '0'
        order by c.create_time asc </select>

    <select id="selectSocialCommentById" parameterType="Long" resultMap="SocialCommentResult">
        <include refid="selectSocialCommentVo" /> where c.comment_id = #{commentId} and c.status =
        '0' </select>

    <select id="countSocialComment" parameterType="Long" resultType="int"> select count(*) from
        master_social_comment where social_id = #{socialId} and status = '0' </select>

    <insert id="insertSocialComment" parameterType="com.ruoyi.pda.domain.SocialComment"
        useGeneratedKeys="true" keyProperty="commentId"> insert into master_social_comment (
        social_id, user_id, content, parent_id, status, create_time ) values ( #{socialId},
        #{userId}, #{content}, #{parentId}, #{status}, sysdate() ) </insert>

    <update id="updateSocialComment" parameterType="com.ruoyi.pda.domain.SocialComment"> update
        master_social_comment <set>
            <if test="content != null and content != ''">content = #{content},</if>
            <if
                test="status != null">status = #{status},</if>
        </set> where comment_id =
        #{commentId} </update>

    <delete id="deleteSocialCommentById" parameterType="Long"> update master_social_comment set
        status = '1' where comment_id = #{commentId} </delete>

    <delete id="deleteSocialCommentByIds" parameterType="String"> update master_social_comment set
        status = '1' where comment_id in <foreach item="commentId" collection="array" open="("
            separator="," close=")"> #{commentId} </foreach>
    </delete>

    <update id="deleteCommentAndReplies" parameterType="Long"> update master_social_comment set
        status = '1' where comment_id = #{commentId} or parent_id = #{commentId} </update>
</mapper> 